# golangci-lint 配置文件
# 基于 2024/2025 最佳实践，但采用渐进式方式
# https://golangci-lint.run/usage/configuration/
version: "2"

# 运行配置
run:
  # 分析超时时间
  timeout: 5m
  
  # Go 版本
  go: "1.21"
  
  # 模块下载模式
  modules-download-mode: readonly
  
  # 退出码（发现问题时）
  issues-exit-code: 1
  
  # 包含测试文件
  tests: true

# Linter 配置
linters:
  # 禁用所有，然后显式启用需要的（最佳实践）
  default: none
  enable:
    # - errcheck      # 检查未处理的错误
    - govet         # 检查可疑的代码结构
    # - staticcheck   # 高级静态分析
    - unused        # 检查未使用的代码
    - ineffassign   # 检测无效的赋值
    - whitespace    # 空白字符检查
    #- misspell      # 拼写检查
    - gocyclo       # 圈复杂度
    - dupl          # 重复代码检测
    - nakedret      # 裸返回检查
    - unparam       # 检查未使用的函数参数
    - dogsled       # 检查赋值中的空白标识符

  # Linter 设置
  settings:
    # errcheck
    errcheck:
      # 检查类型断言
      check-type-assertions: true
      # 检查空标识符
      check-blank: false

    # govet
    govet:
      enable-all: true
      disable:
        - fieldalignment  # 字段对齐优化（通常不需要）
        - shadow         # 变量遮蔽（有时是故意的）

    # staticcheck
    staticcheck:
      # 启用所有检查
      checks: ["all"]
    
    # stylecheck
    stylecheck:
      # 检查项
      checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
      # 允许的点导入
      dot-import-whitelist:
        - fmt
    # 初始化缩写
      initialisms:
        ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", 
        "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", 
        "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", 
        "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSS",
        "YAML", "JWT", "OAuth", "GRPC", "CORS", "CSRF", "XHR", "SHA"]
      # HTTP 状态码白名单
      http-status-code-whitelist: ["200", "400", "404", "500"]

    # gocyclo
    gocyclo:
    # 最小复杂度阈值
      min-complexity: 20  # 相对宽松

    # dupl
    dupl:
      # 最小 token 阈值
      threshold: 150  # 相对宽松
    
    # nakedret
    nakedret:
      # 函数最大行数（超过则不允许裸返回）
      max-func-lines: 100  # 相对宽松

# 问题处理配置
issues:
  # 每个 linter 的最大问题数（0 = 无限制）
  max-issues-per-linter: 0

  # 相同文本的最大问题数
  max-same-issues: 10

  # 是否只包含新问题（用于渐进式引入）
  new: false

  # 输出中去重相同的问题
  uniq-by-line: true

formatters:
  enable:
    - gofmt
    - goimports
  settings:
    gofmt:
      rewrite-rules:
        - pattern: 'any'
          replacement: 'any'
